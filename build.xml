<?xml version="1.0" encoding="utf-8" ?>
<project name="hello" xmlns:ivy="antlib:org.apache.ivy.ant" default="build" basedir=".">
    <path id="project.class.path">
        <pathelement location="war/WEB-INF/classes" />
        <fileset dir="lib" includes="**/*.jar" />
    </path>

    <property name="ivy.install.version" value="2.4.0-rc1" />
    <condition property="ivy.home" value="${env.IVY_HOME}">
        <isset property="env.IVY_HOME" />
    </condition>

    <property name="ivy.home" value="${user.home}/.ant" />
    <property name="ivy.jar.dir" value="${ivy.home}/lib" />
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

    <!-- loading our ivy-settigns file, with our own resolvers declarations :) -->
    <ivy:settings file="ivy-settings.xml" id="ivy.instance" />
    
    <property name="application.module" value="com.google.gwt.sample.hello.Hello" />
    <property name="application.name" value="hello" />
    <property name="application.war" value="${application.name}.war" />

    <target name="download-ivy" unless="offline">
        <mkdir dir="${ivy.jar.dir}" />
        <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
             dest="${ivy.jar.file}" usetimestamp="true" />
    </target>

    <target name="init-ivy" depends="download-ivy">
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar" />
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
    </target>

    <target name="resolve" depends="init-ivy" description="retrieve dependencies with ivy">
        <ivy:retrieve pattern="${ivy.lib.dir}/[artifact]-[revision](-[classifier]).[ext]" />
    </target>

    <target name="libs" depends="resolve" description="Copy libs to WEB-INF/lib">
        <mkdir dir="war/WEB-INF/lib" />
        <copy todir="war/WEB-INF/lib">
            <fileset dir="lib" includes="**/*.jar" />
        </copy>
    </target>

    <target name="javac" depends="libs" description="Compile java source">
        <mkdir dir="war/WEB-INF/classes" />
        <javac srcdir="src" includes="**" encoding="utf-8" destdir="war/WEB-INF/classes"
                       source="1.7" target="1.7" nowarn="true" debug="true" debuglevel="lines,vars,source">
            <classpath refid="project.class.path" />
        </javac>
        <copy todir="war/WEB-INF/classes">
            <fileset dir="src" excludes="**/*.java" />
        </copy>
    </target>

    <target name="gwtc" depends="javac" description="GWT compile to JavaScript">
        <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
            <classpath>
                <pathelement location="src" />
                <path refid="project.class.path" />
            </classpath>
            <jvmarg value="-Xmx1g" />
            <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
            <arg value="${application.module}" />
        </java>
    </target>

    <target name="devmode" depends="javac" description="Run hosted mode">
        <java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
            <classpath>
                <pathelement location="src" />
                <path refid="project.class.path" />
            </classpath>
            <jvmarg value="-Xmx1g" />
            <arg value="-superDevMode" />
            <arg value="${application.module}" />
        </java>
    </target>

    <target name="build" depends="gwtc" description="Build this project" />
    <target name="war" depends="build" description="Create a war file">
            <zip destfile="${application.war}" basedir="war" />
    </target>

    <target name="clean" description="Cleans this project">
        <delete dir="war/WEB-INF/classes" failonerror="false" />
        <delete dir="war/WEB-INF/lib" failonerror="false" />
        <delete dir="war/WEB-INF/deploy" failonerror="false" />
        <delete dir="war/${application.name}" failonerror="false" />
        <delete dir="gwt-unitCache" failonerror="false" />
        <delete dir="lib" failonerror="false" />
        <delete file="${application.war}" failonerror="false" />
    </target>
</project>
